name: Release linux-amd64 version
on: 
  push:
    branches: "release/**"
jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: build-linux-amd64
        run: |
          find . -name "pom.xml" -exec sed -i 's/${{steps.get-id.outputs.id}}-SNAPSHOT/${{steps.get-id.outputs.id}}/g' {} +
          mvn clean package -Pnative -Dquarkus.docker.buildx.platform=linux/amd64
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SUPER_SECRET }}
        with:
          tag_name: ${{steps.get-id.outputs.id}}-linux-amd64
          release_name: ${{steps.get-id.outputs.id}}-linux-amd64
          draft: false
          prerelease: false
          body_path: RELEASENOTES
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SUPER_SECRET }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: Epafi/target/all-in-one-runner-${{steps.get-id.outputs.id}}-runner
          asset_name: epafi-${{steps.get-id.outputs.id}}-linux-amd64
          asset_content_type: application/octet-stream
